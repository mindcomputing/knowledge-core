<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>sh.isaac</groupId>
	<artifactId>knowledge-core</artifactId>
	<version>6.33-knowledge-SNAPSHOT</version>

	<name>Knowledge Core</name>

	<description>
		Based on the Solor.io codebase, formerly known as ISAAC.
		A dynamic semantic architecture for the analysis of models, logic, and language.
	</description>

	<url>https://github.com/mindcomputing/knowledge-core</url>

	<organization>
		<name>
			Organizations participating in Knowledge, ISAAC, KOMET, and SOLOR development include the
			US Veterans Health Administration, Mind Computing, OSHERA, Logica Health, and the Health Services Platform Consortium.
		</name>
	</organization>

	<inceptionYear>2013</inceptionYear>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>
				Contributions from 2013-2017 where performed either by US government
				employees, or under US Veterans Health Administration contracts.

				US Veterans Health Administration contributions by government employees
				are work of the U.S. Government and are not subject to copyright
				protection in the United States. Portions contributed by government
				employees are USGovWork (17USC §105). Not subject to copyright.

				Contribution by contractors to the US Veterans Health Administration
				during this period are contractually contributed under the
				Apache License, Version 2.0.
				See: https://www.usa.gov/government-works

				Contributions prior to 2013:
				Copyright © International Health Terminology Standards Development Organisation.
				Content packaged by SOLOR projects are subject to licenses specific to the content packaged.
			</comments>
		</license>
	</licenses>

	<packaging>pom</packaging>

	<scm>
		<url>https://github.com/mindcomputing/knowledge-core</url>
		<connection>scm:git:https://github.com/mindcomputing/knowledge-core.git</connection>
	</scm>

	<properties>
		<!-- https://stackoverflow.com/questions/26144541/why-am-i-getting-maven-error-unable-to-determine-if-resource-x-exists-in-http#35673586 -->
		<dependency.locations.enabled>false</dependency.locations.enabled>
		<activation.version>1.1.1</activation.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<commons-lang3.version>3.9</commons-lang3.version>
		<commons-logging.version>1.2</commons-logging.version>
		<commons-io.version>2.6</commons-io.version>
		<caffeine.version>2.8.0</caffeine.version>
		<disruptor.version>3.4.2</disruptor.version>
		<docbkx-maven-plugin.version>2.0.17</docbkx-maven-plugin.version>
		<enforcer-api.version>3.0.0-M3</enforcer-api.version>
		<fortify.version>16.10</fortify.version>
		<gitflow-maven-plugin-version>1.14.0</gitflow-maven-plugin-version>
		<guava.version>28.1-jre</guava.version>
		<hk2.version>2.6.1</hk2.version>
		<HK2Utilities.version>1.5.2</HK2Utilities.version>
		<httpclient.version>4.5.10</httpclient.version>
		<javassist.version>3.26.0-GA</javassist.version>
		<jbpm.version>7.30.0.Final</jbpm.version>
		<jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
		<jersey.version>2.29.1</jersey.version>
		<jdepend-maven-plugin.version>2.0</jdepend-maven-plugin.version>
		<jna.version>5.5.0</jna.version>
		<json-io.version>4.11.1</json-io.version>
		<junit.version>4.12</junit.version>  <!-- Need to migrate to 5 at some point -->
		<lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
		<log4j.version>2.12.1</log4j.version>
		<maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-core.version>3.6.3</maven-core.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>  <!-- Do not upgrade until https://issues.apache.org/jira/projects/MDEPLOY/issues/MDEPLOY-246 is fixed -->
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
		<maven-jaxb2-plugin.version>0.14.0</maven-jaxb2-plugin.version>
		<maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
		<maven-plugin-annotations.version>3.6.0</maven-plugin-annotations.version>
		<maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
		<maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-scm-publish-plugin.version>3.0.0</maven-scm-publish-plugin.version>
		<maven-site-plugin.version>3.8.2</maven-site-plugin.version>
		<maven-source-plugin.version>3.2.0</maven-source-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.2.3</maven-war-plugin.version>
		<opencsv.version>5.0</opencsv.version>
		<poi-ooxml.version>4.1.1</poi-ooxml.version>
		<plexus-archiver.version>4.2.1</plexus-archiver.version>
		<plexus-classworlds.version>2.6.0</plexus-classworlds.version>
		<plexus-component-annotations.version>2.1.0</plexus-component-annotations.version>
		<plexus-container-default.version>2.1.0</plexus-container-default.version>
		<plexus-interpolation.version>1.26</plexus-interpolation.version>
		<plexus-io.version>3.2.0</plexus-io.version>
		<plexus-utils.version>3.3.0</plexus-utils.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<drools.version>7.30.0.Final</drools.version>
		<org.apache.lucene.version>8.3.1</org.apache.lucene.version>
		<xodus.version>1.3.124</xodus.version>
		<fontawesome.version>4.7.0-9.1.2</fontawesome.version>
		<sisu-guice.version>4.2.0</sisu-guice.version>
		<sisu-inject-plexus.version>0.3.4</sisu-inject-plexus.version>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.jacoco.itReportPath>${project.build.directory}/jacoco-it.exec</sonar.jacoco.itReportPath>
		<testng.version>7.0.0</testng.version>
		<tilesfx.version>1.6.8</tilesfx.version>
		<wagon-provider-api.version>3.3.4</wagon-provider-api.version>
		<jackson-databind.version>2.12.6.1</jackson-databind.version>
		<javafx.version>12</javafx.version>
		<java.version>11</java.version>
		<java.vendor>openjdk</java.vendor>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<jaxb-runtime.version>2.3.2</jaxb-runtime.version>
		<xercesImpl.version>2.12.0</xercesImpl.version>
	</properties>

	<developers>
		<developer>
			<properties>
				<info>For a listing of developers, clone the project and execute 'git shortlog -sn'</info>
			</properties>
			<name />
		</developer>
	</developers>

	<issueManagement>
		<system>Github</system>
		<url>https://github.com/logicahealth/komet/issues</url>
	</issueManagement>

	<repositories>
		<repository>
			<!-- Fontawesomefx -->
			<id>bintray-jerady-maven</id>
			<name>bintray-plugins</name>
			<url>http://dl.bintray.com/jerady/maven</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-controls</artifactId>
				<version>${javafx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-web</artifactId>
				<version>${javafx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-media</artifactId>
				<version>${javafx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-graphics</artifactId>
				<version>${javafx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-fxml</artifactId>
				<version>${javafx.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>${jaxb-runtime.version}</version>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xercesImpl.version}</version>
			</dependency>
			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${disruptor.version}</version>
			</dependency>
			<dependency>
				<groupId>eu.hansolo</groupId>
				<artifactId>tilesfx</artifactId>
				<version>${tilesfx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${log4j.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-core</artifactId>
				<version>${maven-core.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>net.sf.docbook</groupId>
				<artifactId>docbook-xml</artifactId>
				<version>5.1b4-all</version>
				<classifier>resources</classifier>
				<type>zip</type>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-testng</artifactId>
				<version>${hk2.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.plugin-tools</groupId>
				<artifactId>maven-plugin-annotations</artifactId>
				<version>${maven-plugin-annotations.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-annotations</artifactId>
				<version>${plexus-component-annotations.version}</version>
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Dependencies to force convergence - these are pulled in by other various dependencies (with conflicting versions) -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${activation.version}</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>${jna.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-provider-api</artifactId>
				<version>${wagon-provider-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-artifact</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-model</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-model-builder</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-settings</artifactId>
				<version>${maven-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.enforcer</groupId>
				<artifactId>enforcer-api</artifactId>
				<version>${enforcer-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-classworlds</artifactId>
				<version>${plexus-classworlds.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-container-default</artifactId>
				<version>${plexus-container-default.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-interpolation</artifactId>
				<version>${plexus-interpolation.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-utils</artifactId>
				<version>${plexus-utils.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-api</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-locator</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2</groupId>
				<artifactId>hk2-utils</artifactId>
				<version>${hk2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.hk2.external</groupId>
				<artifactId>javax.inject</artifactId>
				<version>2.5.0-b62</version>
			</dependency>
			<dependency>
				<groupId>net.sagebits</groupId>
				<artifactId>HK2Utilities</artifactId>
				<version>${HK2Utilities.version}</version>
			</dependency>
			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>${javassist.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sonatype.sisu</groupId>
				<artifactId>sisu-guice</artifactId>
				<version>${sisu-guice.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.sisu</groupId>
				<artifactId>org.eclipse.sisu.plexus</artifactId>
				<version>${sisu-inject-plexus.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
			</dependency>
			<dependency>
				<groupId>com.cedarsoftware</groupId>
				<artifactId>json-io</artifactId>
				<version>${json-io.version}</version>
			</dependency>
			<dependency>
				<groupId>com.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${opencsv.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-ooxml.version}</version>
				<exclusions>
					<exclusion>
						<groupId>stax</groupId>
						<artifactId>stax-api</artifactId><!-- Nasty old incompatible version in the dependency chain -->
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.ben-manes.caffeine</groupId>
				<artifactId>caffeine</artifactId>
				<version>${caffeine.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mahout</groupId>
				<artifactId>mahout-collections</artifactId>
				<version>1.0</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>net.lingala.zip4j</groupId>
				<artifactId>zip4j</artifactId>
				<version>2.3.1</version>
			</dependency>
			<dependency>
				<groupId>org.roaringbitmap</groupId>
				<artifactId>RoaringBitmap</artifactId>
				<version>0.8.12</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.200</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2-mvstore</artifactId>
				<version>1.4.200</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId> <!-- TODO need to get rid of collections3.... -->
				<version>4.4</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>2.5.8</version>
			</dependency>
			<dependency>
				<groupId>no.tornado</groupId>
				<artifactId>tornadofx-controls</artifactId>
				<version>1.0.6</version>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-fontawesome</artifactId>
				<version>${fontawesome.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric.centerdevice</groupId>
				<artifactId>javafxsvg</artifactId>
				<version>1.3.0</version>
				<exclusions>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis</artifactId>
					</exclusion>
					<exclusion>
						<groupId>xml-apis</groupId>
						<artifactId>xml-apis-ext</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.apache.xmlgraphics</groupId>
						<artifactId>batik-dom</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>batik-transcoder</artifactId>
				<version>1.12</version>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-controls</artifactId>
				<version>9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-emojione</artifactId>
				<version>3.1.1-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-icons525</artifactId>
				<version>4.2.0-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-materialdesignfont</artifactId>
				<version>2.0.26-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-materialicons</artifactId>
				<version>2.2.0-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-materialstackicons</artifactId>
				<version>2.1-5-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-octicons</artifactId>
				<version>4.3.0-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>de.jensd</groupId>
				<artifactId>fontawesomefx-weathericons</artifactId>
				<version>2.0.10-9.1.2</version>
				<exclusions>
					<exclusion>
						<groupId>de.jensd</groupId>
						<artifactId>fontawesomefx-commons</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.controlsfx</groupId>
				<artifactId>controlsfx</artifactId>
				<version>9.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.jfxtras</groupId>
				<artifactId>jfxtras-controls</artifactId>
				<version>10.0-r1</version>
			</dependency>
			<dependency>
				<groupId>org.jfxtras</groupId>
				<artifactId>jfxtras-menu</artifactId>
				<version>10.0-r1</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric.centerdevice</groupId>
				<artifactId>centerdevice-nsmenufx</artifactId>
				<version>2.1.6</version>
			</dependency>
			<dependency>
				<groupId>com.sleepycat</groupId>
				<artifactId>je</artifactId>
				<version>18.3.12</version>
			</dependency>
			<dependency>
				<groupId>org.drools</groupId>
				<artifactId>drools-bom</artifactId>
				<type>pom</type>
				<version>${drools.version}</version>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>au.csiro</groupId>
				<artifactId>snorocket-core</artifactId>
				<version>4.0.1</version>
			</dependency>
			<dependency>
				<groupId>se.liu.imt.mi.snomedct</groupId>
				<artifactId>SnomedCTParser</artifactId>
				<version>0.4</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl-over-slf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-core</artifactId>
				<version>${org.apache.lucene.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-analyzers-common</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-queryparser</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.lucene</groupId>
				<artifactId>lucene-backward-codecs</artifactId>
				<version>${org.apache.lucene.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jgit</groupId>
				<artifactId>org.eclipse.jgit</artifactId>
				<version>5.6.0.201912101111-r</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.xodus</groupId>
				<artifactId>xodus-openAPI</artifactId>
				<version>${xodus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.xodus</groupId>
				<artifactId>xodus-utils</artifactId>
				<version>${xodus.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.xodus</groupId>
				<artifactId>xodus-environment</artifactId>
				<version>${xodus.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Route all logging into log4j2 during tests -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.shared</groupId>
							<artifactId>maven-dependency-analyzer</artifactId>
							<version>1.11.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<!-- These dependencies get us multi-threaded zip - which is _way_ faster -->
					<dependencies>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-archiver</artifactId>
							<version>${plexus-archiver.version}</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-io</artifactId>
							<version>${plexus-io.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<failOnError>false</failOnError>
						<additionalparam>-Xdoclint:none</additionalparam>
						<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
						<detectOfflineLinks>false</detectOfflineLinks>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
					<configuration>
						<!-- Deal with older (broken) versions of maven that can't find mojo code properly without help -->
						<!-- see http://jira.codehaus.org/browse/MNG-5346 -->
						<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
						<goalPrefix>${project.artifactId}</goalPrefix>
					</configuration>
					<executions>
						<execution>
							<id>mojo-descriptor</id>
							<phase>process-classes</phase>
							<goals>
								<goal>descriptor</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.agilejava.docbkx</groupId>
					<artifactId>docbkx-maven-plugin</artifactId>
					<version>${docbkx-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<systemPropertyVariables>
							<java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
						</systemPropertyVariables>
						<argLine>-Dfile.encoding=UTF-8</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>org.drools*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jvnet.jaxb2.maven2</groupId>
					<artifactId>maven-jaxb2-plugin</artifactId>
					<version>${maven-jaxb2-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${maven-project-info-reports-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
					<configuration>
						<locales>en</locales>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<version>${maven-scm-publish-plugin.version}</version>
					<configuration>
						<scmBranch>gh-pages</scmBranch>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>${lifecycle-mapping.version}</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId> org.glassfish.hk2 </groupId>
										<artifactId> hk2-inhabitant-generator </artifactId>
										<versionRange> [2.4.0-b33,) </versionRange>
										<goals>
											<goal>
												generate-inhabitants
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId> jacoco-maven-plugin </artifactId>
										<versionRange> [0.7.4.201502262128,) </versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>sh.isaac.knowledge-core.core</groupId>
										<artifactId>mojo</artifactId>
										<versionRange>[6.00-knowledge-SNAPSHOT,)</versionRange>
										<goals>
											<goal>export-taxonomy</goal>
											<goal>setup-isaac</goal>
											<goal>shutdown-isaac</goal>
											<goal>quasi-mojo-executor</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>unpack</goal>
											<goal>copy</goal>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.6.0</version>
				</plugin>
				<plugin>
					<groupId>com.zenjava</groupId>
					<artifactId>javafx-maven-plugin</artifactId>
					<version>8.8.3</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>com.amashchenko.maven.plugin</groupId>
				<artifactId>gitflow-maven-plugin</artifactId>
				<version>${gitflow-maven-plugin-version}</version>
				<configuration>
					<verbose>true</verbose>
					<tychoBuild>false</tychoBuild>
					<allowSnapshots>false</allowSnapshots>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<enableFeatureVersions>true</enableFeatureVersions>
					<enableSshAgent>true</enableSshAgent>
					<fetchRemote>false</fetchRemote>
					<installProject>true</installProject>
					<commitMessagePrefix>[gitflow]</commitMessagePrefix>
					<commitMessages>
						<releaseStartMessage> Update versions for release</releaseStartMessage>
						<releaseFinishMessage> Update for next development version</releaseFinishMessage>
					</commitMessages>
					<username>${git.user}</username>
					<password>${git.password}</password>
					<skipTestProject>true</skipTestProject>
					<gitFlowConfig>
						<productionBranch>master</productionBranch>
						<developmentBranch>develop</developmentBranch>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<supportBranchPrefix>support/</supportBranchPrefix>
						<versionTagPrefix></versionTagPrefix>
						<origin>origin</origin>
					</gitFlowConfig>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!--If you need to define your own MANIFEST.MF file you can simply achieve that via Maven Archiver configuration like in the following example: 
					<archive>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive> -->
					<skipIfEmpty>true</skipIfEmpty>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>11</release>
					<encoding>UTF-8</encoding>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!--<compilerArgument>-Xlint:unchecked</compilerArgument> -->
					<!--<compilerArgument>-Xlint:deprecation</compilerArgument> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<modules>
		<module>core</module>
		<module>integration</module>
		<module>misc</module>
		<module>provider</module>
		<module>komet</module>
		<module>solor</module>
	</modules>

	<profiles>
		<profile>
			<id>dbdoclet</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
							<doclet>org.dbdoclet.doclet.docbook.DocBookDoclet</doclet>
							<docletArtifact>
								<groupId>org.dbdoclet</groupId>
								<artifactId>dbdoclet</artifactId>
								<version>8.0.2</version>
							</docletArtifact>
							<author>false</author>
							<bottom>false</bottom>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>umlgraph</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>

							<docletPath>/path/to/UmlGraph.jar</docletPath>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>doclet</artifactId>
								<version>5.6.6</version>
							</docletArtifact>
							<additionalparam>-views</additionalparam>
							<useStandardDocletOptions>true</useStandardDocletOptions>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>sca-translate</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.hpe.security.fortify.maven.plugin</groupId>
						<artifactId>sca-maven-plugin</artifactId>
						<version>${fortify.version}</version>
						<configuration>
							<jre64>true</jre64>
							<jreStack>8M</jreStack>
							<maxHeap>13000M</maxHeap>
							<verbose>true</verbose>
							<buildId>isaac-fortify-build</buildId>
							<toplevelArtifactId>isaac-parent</toplevelArtifactId>
							<skipTests>true</skipTests>
							<failOnSCAError>true</failOnSCAError>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>translate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
