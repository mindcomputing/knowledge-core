<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>sh.isaac.uts-core</groupId>
		<artifactId>komet</artifactId>
		<version>6.31-uts-SNAPSHOT</version>
	</parent>
	<groupId>sh.isaac.uts-core.komet</groupId>
	<artifactId>application</artifactId>
	<packaging>jar</packaging>

	<name>ISAACâ€™s KOMET: Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClass>sh.komet.fx.stage.MainApp</mainClass>
		<log4j.version>2.8.1</log4j.version>
		<solor.db.version>1.34</solor.db.version>
		<solor.snap.db.version>1.31</solor.snap.db.version>
		<custom.db.version>1.0.0</custom.db.version>
	</properties>

	<organization>
		<!-- Used as the 'Vendor' for JNLP generation -->
		<name>ISAAC's KOMET Collaborators</name>
	</organization>
	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-media</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>batch</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>css</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jfxtras</groupId>
			<artifactId>jfxtras-controls</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jfxtras</groupId>
			<artifactId>jfxtras-menu</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<!-- route logging into log4j for app -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
		</dependency>
		<!-- route logging into log4j for app -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.core</groupId>
			<artifactId>metadata</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.hk2</groupId>
			<artifactId>hk2-testng</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.codecentric.centerdevice</groupId>
			<artifactId>centerdevice-nsmenufx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>ibdf</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>commit</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>chronology</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>changeset-view</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>memory-managment</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.solor</groupId>
			<artifactId>direct-import</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>logic</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>progress</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>coordinate</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>path</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>observable</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>drools</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>gui-contracts</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>assemblage-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>komet-preferences</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>semantic-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>export-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>statement-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>taxonomy-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>preferences</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>search-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>scripting</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>dialog</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>concept-detail</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.komet</groupId>
			<artifactId>progress-view</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>sh.isaac.uts-core.provider</groupId>
			<artifactId>metacontent</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jfx/libs</outputDirectory>
							<excludeArtifactIds>fontawesomefx-commons,solor-db,solor-snap-db,solor-us-db</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>copy-file</id>
						<phase>verify</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<sourceFile>${project.build.directory}/${project.artifactId}-${project.version}.jar</sourceFile>
							<destinationFile>${project.build.directory}/jfx/${project.artifactId}-${project.version}.jar</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
					<parallel>false</parallel>
					<useSystemClassLoader>true</useSystemClassLoader>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<argLine>-ea -Xmx12g -Dfile.encoding=UTF-8 -Djava.awt.headless=true</argLine>
					<!-- <argLine>-Xmx8g -Xms8g -Djava.awt.headless=true -Dfile.encoding=UTF-8 -agentpath:/Applications/jprofiler8/bin/macos/libjprofilerti.jnilib=port=8849</argLine> -->
					<!-- debugForkedProcess>true</debugForkedProcess -->
					<includes>
						<!-- Let JUnit annotations decide -->
						<include>**/*.class</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>${mainClass}</mainClass>
							<!--<arguments>-Xdebug -Xrunjdwp:transport="dt_socket,suspend=y,server=n,address=8888" -Dglass.disableGrab=true -jar "${project.build.directory}/${project.build.finalName}.jar"</arguments> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>solor-database-11</id>
			<activation>
				<property>
					<name>database-11</name>
					<value>solor</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>one.solor</groupId>
					<artifactId>solor-snap-db</artifactId>
					<version>${solor.snap.db.version}</version>
					<type>zip</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>extract-solor-datastore</id>
								<phase>process-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifact>
											<groupId>one.solor</groupId>
											<artifactId>solor-snap-db</artifactId>
											<version>${solor.snap.db.version}</version>
											<type>zip</type>
										</artifact>
									</artifactItems>
									<outputDirectory>${project.build.directory}/data/isaac.data/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>solor-full-database-11</id>
			<activation>
				<property>
					<name>database-11</name>
					<value>solor-full</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>one.solor</groupId>
					<artifactId>solor-db</artifactId>
					<version>${solor.db.version}</version>
					<type>zip</type>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>extract-solor-datastore</id>
								<phase>process-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifact>
											<groupId>one.solor</groupId>
											<artifactId>solor-db</artifactId>
											<version>${solor.db.version}</version>
											<type>zip</type>
										</artifact>
									</artifactItems>
									<outputDirectory>${project.build.directory}/data/isaac.data/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>file-datastore</id>
			<activation>
				<property>
					<name>!explicit-datstore</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>sh.isaac.uts-core.provider</groupId>
					<artifactId>datastore-locator</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>sh.isaac.uts-core.provider</groupId>
					<artifactId>query</artifactId>
					<version>${project.parent.version}</version>
				</dependency>
				<dependency>
					<groupId>sh.isaac.uts-core.provider</groupId>
					<artifactId>stamp</artifactId>
					<version>${project.parent.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>postgres-datastore</id>
			<activation>
				<property>
					<name>explicit-datstore</name>
					<value>postgres</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>sh.isaac.uts-core.provider</groupId>
					<artifactId>postgress</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
