<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>sh.isaac</groupId>
		<artifactId>misc</artifactId>
		<version>4.48-SNAPSHOT</version>
	</parent>
	<groupId>sh.isaac.misc</groupId>
	<artifactId>importers</artifactId>
	<packaging>maven-plugin</packaging>
	
	<name>ISAAC misc: Importers</name>
	
	<properties>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>sh.isaac.misc</groupId>
			<artifactId>util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.misc</groupId>
			<artifactId>vhat-constants</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.misc</groupId>
			<artifactId>vhat-util</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.integration</groupId>
			<artifactId>import-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.core</groupId>
			<artifactId>model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>sh.isaac.provider</groupId>
			<artifactId>logic</artifactId>
			<version>${project.parent.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>sh.isaac.solor</groupId>
			<artifactId>direct-import</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-core</artifactId>
			<version>3.7.0</version>
		</dependency>
		
		<!-- Some of the importer mojos do some futzing with log4j inner classes, need this to compile, but those classes 
		aren't used in normal runtime, so not making this a compile / transitive dependency.  The mojo execution runner
		will also provide this at execution time.  -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- This gets us nice console logging, so long as we are running ad-hoc tests from the src/test/java package -->
		<dependency>
			<groupId>sh.isaac.core</groupId>
			<artifactId>log-config</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
		
			<!-- Create the options.json file -->
			<plugin>
				<groupId>sh.isaac.core</groupId>
				<artifactId>mojo</artifactId>
				<version>${project.parent.version}</version>
				<dependencies>
					<dependency>
						<groupId>sh.isaac.integration</groupId>
						<artifactId>import-utils</artifactId>
						<version>${project.parent.version}</version>
					</dependency>
					<dependency>
						<groupId>${project.groupId}</groupId>
						<artifactId>${project.artifactId}</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>create-config-artifact</id>
						<phase>package</phase>
						<goals>
							<goal>quasi-mojo-executor</goal>
						</goals>
						<configuration>
							<quasiMojoName>create-config-artifact</quasiMojoName>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach the options.json file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-result</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/assembly.xml</descriptor>
							</descriptors>
							<attach>false</attach>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach the options.json.zip file to the build -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifact</id>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<type>options.json.zip</type>
									<file>${project.build.directory}/${project.build.finalName}-.options.json.zip</file>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generate code from various xsd files -->
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-CVX-xsd</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/cvx</schemaDirectory>
							<schemaIncludes>
								<include>CVX_version1.xsd</include>
							</schemaIncludes>
							<generatePackage>sh.isaac.convert.mojo.cvx.data</generatePackage>
							<generateDirectory>${project.build.directory}/generated-sources/cvx</generateDirectory>
						</configuration>
					</execution>
					<execution>
						<id>generate-MVX-xsd</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/mvx</schemaDirectory>
							<schemaIncludes>
								<include>MVX_version1.xsd</include>
							</schemaIncludes>
							<generatePackage>sh.isaac.convert.mojo.mvx.data</generatePackage>
							<generateDirectory>${project.build.directory}/generated-sources/mvx</generateDirectory>
						</configuration>
					</execution>
					<!--execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generatePackage>coreschema</generatePackage>
							<schemaDirectory>src/main/resources/hl7v3/datatypes</schemaDirectory>
							<schemaIncludes>
								<include>hl7-r2_datatypes.xsd</include>
							</schemaIncludes>
						</configuration>
					</execution-->
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<id>mif</id>
						<configuration>
							<generatePackage>mifschema</generatePackage>
							<schemaDirectory>src/main/resources/hl7v3/mif</schemaDirectory>
							<schemaIncludes>
								<include>xhtml1-strict.xsd</include>
								<include>mif-COMPLETE.xsd</include>
							</schemaIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Mark this project as a maven mojo -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>